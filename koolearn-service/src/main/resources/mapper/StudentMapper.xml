<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koolearn.club.mapper.StudentMapper">
    <sql id="Base_Column_List">id, sid, nickname, phone, sex, avatar, `desc`, open_id, source, create_time, update_time</sql>
    <sql id="Relation_Column_List">a.id, a.sid, a.nickname, a.phone, a.sex, a.avatar, a.`desc`, a.open_id, a.source, a.create_time, a.update_time</sql>

  <resultMap id="BaseResultMap" type="com.koolearn.club.entity.PeStudent">
      <id column="id" property="id" jdbcType="INTEGER"/>
      <result column="sid" property="sid" jdbcType="VARCHAR"/>
      <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
      <result column="phone" property="phone" jdbcType="VARCHAR"/>
      <result column="sex" property="sex" jdbcType="TINYINT"/>
      <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
      <result column="desc" property="desc" jdbcType="VARCHAR"/>
      <result column="open_id" property="openId" jdbcType="VARCHAR"/>
      <result column="source" property="source" jdbcType="TINYINT"/>
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
      <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
  </resultMap>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_student
        where id=#{id} and is_delete != 1
    </select>


    <select id="listByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit != 1 and b.is_delete != 1 and b.class_id = #{classId}
        order by a.create_time
        limit #{offset},#{pageSize}
    </select>


    <select id="listAllByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit != 1 and b.is_delete != 1 and b.class_id = #{classId}
        order by a.create_time
    </select>


    <select id="countByClassId" resultType="java.lang.Integer">
        select count(a.id) from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit != 1 and b.is_delete != 1 and b.class_id = #{classId}
    </select>


    <select id="listUndoneTaskByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit != 1 and b.is_delete != 1 and b.class_id = #{classId}
        and b.stu_id not in (select stu_id from pe_learning where status = 2 and to_days(end_time) = to_days(now()) and class_id = #{classId})
        order by a.create_time
        limit #{offset},#{pageSize}
    </select>


    <select id="countUndoneTaskByClassId" resultType="java.lang.Integer">
        select count(a.id) from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit != 1 and b.is_delete != 1 and b.class_id = #{classId}
        and b.stu_id not in (select stu_id from pe_learning where status = 2 and to_days(end_time) = to_days(now()) and class_id = #{classId})
    </select>


    <select id="listQuitStuByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit = 1 and b.is_delete != 1 and b.class_id = #{classId}
        and to_days(b.quit_time) = to_days(now())
        order by a.create_time
        limit #{offset},#{pageSize}
    </select>

    <select id="countQuitStuByClassId" resultType="java.lang.Integer">
        select count(a.id) from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit = 1 and b.is_delete != 1 and b.class_id = #{classId}
        and to_days(b.quit_time) = to_days(now())
    </select>

    <select id="getByOpenId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_student
        where open_id=#{openId} and is_delete != 1 limit 1
    </select>

    <update id="updateSid">
        update pe_student
        set sid = #{sid}
        where id=#{id}
    </update>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.koolearn.club.entity.PeStudent">
        insert into pe_student(
        sid,nickname, phone, sex, avatar , `desc`, open_id, source, create_time
        )
        values(
        #{sid},#{nickname}, #{phone}, #{sex}, #{avatar}, #{desc}, #{openId}, #{source}, #{createTime}
        )
    </insert>

    <update id="update" parameterType="com.koolearn.club.entity.PeStudent">
        update pe_student
        <set>
            <if test="nickname!=null">nickname = #{nickname},</if>
            <if test="avatar!=null"> avatar = #{avatar},</if>
            <if test="desc!=null">`desc` = #{desc},</if>
            <if test="sex != null"> sex = #{sex}</if>
        </set>
        where id=#{id}
    </update>

    <select id="getBySid" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_student
        where sid=#{sid} and is_delete != 1 limit 1
    </select>

    <select id="listForNewJoin" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        right join pr_class_stat_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.class_stat_id = #{classStatId} and b.type = 1
        order by a.create_time
    </select>

    <select id="listAllUndoneTaskByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit != 1 and b.is_delete != 1 and b.class_id = #{classId}
        and b.stu_id not in (select stu_id from pe_learning where status = 2 and to_days(end_time) = to_days(#{yesterday}) and class_id = #{classId})
        order by a.create_time
    </select>

    <select id="listAllQuitStuByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit = 1 and b.is_delete != 1 and b.class_id = #{classId}
        and to_days(b.quit_time) = to_days(#{yesterday})
        order by a.create_time
    </select>

    <select id="listAllJoinStuByClassId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_student a
        left join pr_class_student b on a.id = b.stu_id
        where a.is_delete != 1 and b.is_quit = 0 and b.is_delete != 1 and b.class_id = #{classId}
        and to_days(b.join_time) =  to_days(#{yesterday})
        order by a.create_time
    </select>

</mapper>
