<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koolearn.club.mapper.CommentMapper">

  <sql id="Base_Column_List">id, learning_id, pid, stu_id, content, create_time, update_time</sql>

  <sql id="Relation_Column_List">a.id, a.learning_id, a.pid, a.stu_id, a.content, a.create_time, a.update_time</sql>

  <resultMap id="BaseResultMap" type="com.koolearn.club.entity.PeComment">
      <id column="id" property="id" jdbcType="INTEGER"/>
      <result column="learning_id" property="learningId" jdbcType="INTEGER"/>
      <result column="pid" property="pid" jdbcType="INTEGER"/>
      <result column="stu_id" property="stuId" jdbcType="INTEGER"/>
      <result column="content" property="content" jdbcType="VARCHAR"/>
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
      <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
      <result column="replier_id" property="replierId" jdbcType="INTEGER"/>
  </resultMap>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_comment
        where id=#{id} and is_delete != 1
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.koolearn.club.entity.PeComment">
        insert into pe_comment(
        learning_id, pid, stu_id, content, create_time
        )
        values(
        #{learningId}, #{pid}, #{stuId}, #{content}, #{createTime}
        )
    </insert>

    <update id="delete">
        update pe_comment
        set is_delete = 1
        where id=#{id}
    </update>


    <select id="listByLearningId" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/>, b.stu_id as replier_id from pe_comment a
        left join pe_comment b on a.id = b.pid
        where a.learning_id=#{learningId} and a.is_delete != 1
        order by a.create_time asc
    </select>




</mapper>
