<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koolearn.club.mapper.LearningCommentMapper">
  <sql id="Base_Column_List">id, teach_id, learning_id, `type`,duration, content, is_reply, reply_type, create_time</sql>
  <resultMap id="BaseResultMap" type="com.koolearn.club.entity.PeLearningComment">
      <id column="id" property="id" jdbcType="INTEGER"/>
      <result column="teach_id" property="teachId" jdbcType="INTEGER"/>
      <result column="learning_id" property="learningId" jdbcType="INTEGER"/>
      <result column="type" property="type" jdbcType="TINYINT"/>
      <result column="duration" property="duration" jdbcType="INTEGER"/>
      <result column="content" property="content" jdbcType="VARCHAR"/>
      <result column="is_reply" property="isReply" jdbcType="TINYINT"/>
      <result column="reply_type" property="replyType" jdbcType="TINYINT"/>
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
  </resultMap>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_learning_comment
        where id=#{id} and is_delete != 1
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.koolearn.club.entity.PeLearningComment">
        insert into pe_learning_comment(
        teach_id, learning_id, `type`,duration, content, is_reply, reply_type, create_time
        )
        values(
        #{teachId}, #{learningId}, #{type}, #{duration}, #{content}, #{isReply}, #{replyType}, #{createTime}
        )
    </insert>


    <update id="deleteByLearningId" parameterType="java.lang.Integer">
        update pe_learning_comment
        set is_delete = 1
        where learning_id = #{learningId}
    </update>


    <select id="listByLearningId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_learning_comment
        where learning_id=#{learningId} and (is_reply is null or is_reply != 1) and is_delete != 1
    </select>

    <select id="listAllByLearningId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_learning_comment
        where learning_id=#{learningId}  and is_delete != 1 order by create_time asc
    </select>


</mapper>
