<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koolearn.club.mapper.ClassMapper">

  <sql id="Base_Column_List">id, teach_id, content_id, `name`, status, `desc`, cover_url, open_time, enroll_end_time, upper_limit, is_charge, amount, qr_code, create_time, update_time,identifying_code_id, is_shark, shark_course_name</sql>

  <sql id="Relation_Column_List">a.id, a.teach_id, a.content_id, a.`name`, a.status, a.`desc`, a.cover_url, a.open_time, a.enroll_end_time, a.upper_limit, a.is_charge, a.amount, a.qr_code, a.create_time, a.update_time,a.identifying_code_id, a.is_shark, a.shark_course_name</sql>

  <resultMap id="BaseResultMap" type="com.koolearn.club.entity.PeClass">
      <id column="id" property="id" jdbcType="INTEGER"/>
      <result column="teach_id" property="teachId" jdbcType="INTEGER"/>
      <result column="content_id" property="contentId" jdbcType="INTEGER"/>
      <result column="name" property="name" jdbcType="VARCHAR"/>
      <result column="status" property="status" jdbcType="TINYINT"/>
      <result column="desc" property="desc" jdbcType="VARCHAR"/>
      <result column="cover_url" property="coverUrl" jdbcType="VARCHAR"/>
      <result column="open_time" property="openTime" jdbcType="TIMESTAMP"/>
      <result column="enroll_end_time" property="enrollEndTime" jdbcType="TIMESTAMP"/>
      <result column="upper_limit" property="upperLimit" jdbcType="INTEGER"/>
      <result column="is_charge" property="isCharge" jdbcType="TINYINT"/>
      <result column="amount" property="amount" jdbcType="DECIMAL"/>
      <result column="qr_code" property="QRCode" jdbcType="VARCHAR"/>
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
      <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
      <result column="identifying_code_id" property="identifyingCodeId" jdbcType="VARCHAR"/>
      <result column="is_shark" property="isShark" jdbcType="TINYINT"/>
      <result column="shark_course_name" property="sharkCourseName" jdbcType="VARCHAR"/>

  </resultMap>

    <select id="getById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_class
        where id=#{id} and is_delete != 1
    </select>

    <select id="listClassForStu" resultMap="BaseResultMap">
        select <include refid="Relation_Column_List"/> from pe_class a
        left join pr_class_student b on a.id = b.class_id
        where a.is_delete !=1 and b.is_delete !=1 and b.is_quit != 1 and b.stu_id = #{stuId}
        order by b.join_time desc
        limit #{offset},#{pageSize}
    </select>

    <select id="countClassForStu" resultType="java.lang.Integer">
        select count(a.id) from pe_class a
        left join pr_class_student b on a.id = b.class_id
        where a.is_delete != 1 and b.is_delete != 1 and b.is_quit != 1 and b.stu_id = #{stuId}
    </select>

    <select id="listClassForTeach" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_class
        where is_delete !=1 and teach_id = #{teachId}
        order by create_time desc
        limit #{offset},#{pageSize}
    </select>

    <select id="countClassForTeach" resultType="java.lang.Integer">
        select count(id) from pe_class
        where is_delete !=1 and teach_id = #{teachId}
    </select>


    <select id="listClassForManage" resultMap="BaseResultMap">
        select
        <include refid="Relation_Column_List"/>
        from pe_class a
        left join pe_teacher b on a.teach_id = b.id
        <where>
            a.is_delete != 1
            <if test="startCreateTime != null and startCreateTime != ''">and a.create_time &gt;= #{beginCreateTime}</if>
            <if test="endCreateTime != null and endCreateTime != ''">and a.create_time &lt;= #{endCreateTime}</if>
            <if test="minClassNum != null and minClassNum != ''">and (select count(*) from pr_class_student where class_id = a.id and is_delete != 1 and is_quit != 1) &gt;= #{minClassNum}</if>
            <if test="maxClassNum != null and maxClassNum != ''">and (select count(*) from pr_class_student where class_id = a.id and is_delete != 1 and is_quit != 1) &lt;= #{maxClassNum}</if>
            <if test="className != null and className != ''">and a.name = #{className}</if>
            <if test="creater != null and creater != ''">and b.nickname like CONCAT('%',#{creater},'%')</if>
            <if test="classId != null and classId != ''">and a.id = #{classId}</if>
            <if test="teachId != null and teachId != ''">and a.teach_id = #{teachId}</if>
        </where>
        order by a.create_time desc
        limit #{offset},#{pageSize}
    </select>

    <select id="countClassForManage" resultType="java.lang.Integer">
        select
        count(a.id)
        from pe_class a
        left join pe_teacher b on a.teach_id = b.id
        <where>
            a.is_delete != 1
            <if test="startCreateTime != null and startCreateTime != ''">and a.create_time &gt;= #{beginCreateTime}</if>
            <if test="endCreateTime != null and endCreateTime != ''">and a.create_time &lt;= #{endCreateTime}</if>
            <if test="minClassNum != null and minClassNum != ''">and (select count(*) from pr_class_student where class_id = a.id and is_delete != 1 and is_quit != 1) &gt;= #{minClassNum}</if>
            <if test="maxClassNum != null and maxClassNum != ''">and (select count(*) from pr_class_student where class_id = a.id and is_delete != 1 and is_quit != 1) &lt;= #{maxClassNum}</if>
            <if test="className != null and className != ''">and a.name = #{className}</if>
            <if test="creater != null and creater != ''">and b.nickname like CONCAT('%',#{creater},'%')</if>
            <if test="classId != null and classId != ''">and a.id = #{classId}</if>
            <if test="teachId != null and teachId != ''">and a.teach_id = #{teachId}</if>
        </where>
    </select>



    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.koolearn.club.entity.PeClass">
        insert into pe_class(
        teach_id, content_id, `name`, `status`, `desc`, cover_url, is_charge, amount, open_time, create_time,identifying_code_id
        )
        values(
        #{teachId}, #{contentId}, #{name}, #{status}, #{desc}, #{coverUrl}, #{isCharge}, #{amount}, #{openTime}, #{createTime},#{identifyingCodeId}
        )
    </insert>

    <update id="update" parameterType="com.koolearn.club.entity.PeClass">
        update pe_class
        set `name` = #{name},
        `desc` = #{desc},
        cover_url = #{coverUrl},
        open_time = #{openTime},
        enroll_end_time = #{enrollEndTime},
        upper_limit = #{upperLimit},
        is_charge = #{isCharge},
        amount = #{amount},
        is_shark = #{isShark},
        shark_course_name = #{sharkCourseName}
        where id=#{id}
    </update>


    <update id="updateStatus">
        update pe_class
        set `status` = #{status}
        where id=#{id}
    </update>

    <select id="allClassesByStatus" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from pe_class
        where status =#{status} order by create_time desc
    </select>

    <update id="updateQRCodeUrl">
        update pe_class
        set qr_code = #{url}
        where id=#{id}
    </update>

</mapper>
